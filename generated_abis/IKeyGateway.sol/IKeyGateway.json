{"abi":[{"type":"function","name":"ADD_TYPEHASH","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"VERSION","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"add","inputs":[{"name":"keyType","type":"uint32","internalType":"uint32"},{"name":"key","type":"bytes","internalType":"bytes"},{"name":"metadataType","type":"uint8","internalType":"uint8"},{"name":"metadata","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addFor","inputs":[{"name":"fidOwner","type":"address","internalType":"address"},{"name":"keyType","type":"uint32","internalType":"uint32"},{"name":"key","type":"bytes","internalType":"bytes"},{"name":"metadataType","type":"uint8","internalType":"uint8"},{"name":"metadata","type":"bytes","internalType":"bytes"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"sig","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"keyRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IKeyRegistry"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ADD_TYPEHASH()":"ab583c1b","VERSION()":"ffa1ad74","add(uint32,bytes,uint8,bytes)":"22b1a414","addFor(address,uint32,bytes,uint8,bytes,uint256,bytes)":"a005d3d2","keyRegistry()":"086b5198"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ADD_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"keyType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"metadataType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fidOwner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"keyType\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"metadataType\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"addFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"keyRegistry\",\"outputs\":[{\"internalType\":\"contract IKeyRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"add(uint32,bytes,uint8,bytes)\":{\"params\":{\"key\":\"Bytes of the key to add.\",\"keyType\":\"The key's numeric keyType.\",\"metadata\":\"Metadata about the key, which is not stored and only emitted in an event.\",\"metadataType\":\"Metadata type ID.\"}},\"addFor(address,uint32,bytes,uint8,bytes,uint256,bytes)\":{\"params\":{\"deadline\":\"Deadline after which the signature expires.\",\"fidOwner\":\"The fid owner address.\",\"key\":\"Bytes of the key to add.\",\"keyType\":\"The key's numeric keyType.\",\"metadata\":\"Metadata about the key, which is not stored and only emitted in an event.\",\"metadataType\":\"Metadata type ID.\",\"sig\":\"EIP-712 Add signature generated by fid owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADD_TYPEHASH()\":{\"notice\":\"EIP-712 typehash for Add signatures.\"},\"VERSION()\":{\"notice\":\"Contract version specified in the Farcaster protocol version scheme.\"},\"add(uint32,bytes,uint8,bytes)\":{\"notice\":\"Add a key associated with the caller's fid, setting the key state to ADDED.\"},\"addFor(address,uint32,bytes,uint8,bytes,uint256,bytes)\":{\"notice\":\"Add a key on behalf of another fid owner, setting the key state to ADDED.         caller must supply a valid EIP-712 Add signature from the fid owner.\"},\"keyRegistry()\":{\"notice\":\"The KeyRegistry contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IKeyGateway.sol\":\"IKeyGateway\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":chainlink/=lib/chainlink-brownie-contracts/contracts/src/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-latest/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-latest/=lib/openzeppelin-latest/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/\"]},\"sources\":{\"src/interfaces/IKeyGateway.sol\":{\"keccak256\":\"0xafc8c535ee4776d0f309ac3e27ab4781c560544f95be26a97985671b6d1b3479\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8ea2805e0ebe8716c3b76f6c010153cb01ab276253931813b312749d61593ed\",\"dweb:/ipfs/QmbwRRcHTgF7NV5L54au4pW5f7UuSWVQf11BB8ZmRautus\"]},\"src/interfaces/IKeyRegistry.sol\":{\"keccak256\":\"0xefe14b68f2ab29f538f959b31554725eb07878e275449cfe4decdf38ccf33e72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3471ab00a8bd3d913f5799bb771ed07ebccc8355a04127cfe5c82f046b2c42d7\",\"dweb:/ipfs/QmQxj7BiKdS54XTRe6gsPSLnFpaZNvpEr1SWpfKqfzk6uf\"]},\"src/interfaces/IMetadataValidator.sol\":{\"keccak256\":\"0x27018deec7c3f5be1e7f357ce749fe4c3d52cf76ad4cbe2f7b54c648fe785d80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653d22e3904bc66aa692d88d8739179b674d914612cc980598e31e5538f5390a\",\"dweb:/ipfs/QmY2vWDWrKmm6AVCGnkV3pDfNfuqKzEwuLJYAN4xdfeKzX\"]},\"src/interfaces/IdRegistryLike.sol\":{\"keccak256\":\"0xe06fbf0c31bfd4136c28355a3cd663a0fe06b9843966ca3f71a13b8fc946300f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d74a03f3a6c1e8f3ad2ac10910d9809cc287e5ae856af01b9e9afa3a8b290786\",\"dweb:/ipfs/QmNeAp9sP6sWQGyhP6itEeQTo8xHtvzEn1Ks7LjnJXAuAJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.29+commit.ab55807c"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"ADD_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"VERSION","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint32","name":"keyType","type":"uint32"},{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"uint8","name":"metadataType","type":"uint8"},{"internalType":"bytes","name":"metadata","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"add"},{"inputs":[{"internalType":"address","name":"fidOwner","type":"address"},{"internalType":"uint32","name":"keyType","type":"uint32"},{"internalType":"bytes","name":"key","type":"bytes"},{"internalType":"uint8","name":"metadataType","type":"uint8"},{"internalType":"bytes","name":"metadata","type":"bytes"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"sig","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"addFor"},{"inputs":[],"stateMutability":"view","type":"function","name":"keyRegistry","outputs":[{"internalType":"contract IKeyRegistry","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"add(uint32,bytes,uint8,bytes)":{"params":{"key":"Bytes of the key to add.","keyType":"The key's numeric keyType.","metadata":"Metadata about the key, which is not stored and only emitted in an event.","metadataType":"Metadata type ID."}},"addFor(address,uint32,bytes,uint8,bytes,uint256,bytes)":{"params":{"deadline":"Deadline after which the signature expires.","fidOwner":"The fid owner address.","key":"Bytes of the key to add.","keyType":"The key's numeric keyType.","metadata":"Metadata about the key, which is not stored and only emitted in an event.","metadataType":"Metadata type ID.","sig":"EIP-712 Add signature generated by fid owner."}}},"version":1},"userdoc":{"kind":"user","methods":{"ADD_TYPEHASH()":{"notice":"EIP-712 typehash for Add signatures."},"VERSION()":{"notice":"Contract version specified in the Farcaster protocol version scheme."},"add(uint32,bytes,uint8,bytes)":{"notice":"Add a key associated with the caller's fid, setting the key state to ADDED."},"addFor(address,uint32,bytes,uint8,bytes,uint256,bytes)":{"notice":"Add a key on behalf of another fid owner, setting the key state to ADDED.         caller must supply a valid EIP-712 Add signature from the fid owner."},"keyRegistry()":{"notice":"The KeyRegistry contract."}},"version":1}},"settings":{"remappings":["chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","chainlink/=lib/chainlink-brownie-contracts/contracts/src/","ds-test/=lib/solmate/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-latest/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-latest/=lib/openzeppelin-latest/","openzeppelin/=lib/openzeppelin-contracts/","solmate/=lib/solmate/"],"optimizer":{"enabled":true,"runs":100000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/interfaces/IKeyGateway.sol":"IKeyGateway"},"evmVersion":"cancun","libraries":{}},"sources":{"src/interfaces/IKeyGateway.sol":{"keccak256":"0xafc8c535ee4776d0f309ac3e27ab4781c560544f95be26a97985671b6d1b3479","urls":["bzz-raw://b8ea2805e0ebe8716c3b76f6c010153cb01ab276253931813b312749d61593ed","dweb:/ipfs/QmbwRRcHTgF7NV5L54au4pW5f7UuSWVQf11BB8ZmRautus"],"license":"MIT"},"src/interfaces/IKeyRegistry.sol":{"keccak256":"0xefe14b68f2ab29f538f959b31554725eb07878e275449cfe4decdf38ccf33e72","urls":["bzz-raw://3471ab00a8bd3d913f5799bb771ed07ebccc8355a04127cfe5c82f046b2c42d7","dweb:/ipfs/QmQxj7BiKdS54XTRe6gsPSLnFpaZNvpEr1SWpfKqfzk6uf"],"license":"MIT"},"src/interfaces/IMetadataValidator.sol":{"keccak256":"0x27018deec7c3f5be1e7f357ce749fe4c3d52cf76ad4cbe2f7b54c648fe785d80","urls":["bzz-raw://653d22e3904bc66aa692d88d8739179b674d914612cc980598e31e5538f5390a","dweb:/ipfs/QmY2vWDWrKmm6AVCGnkV3pDfNfuqKzEwuLJYAN4xdfeKzX"],"license":"MIT"},"src/interfaces/IdRegistryLike.sol":{"keccak256":"0xe06fbf0c31bfd4136c28355a3cd663a0fe06b9843966ca3f71a13b8fc946300f","urls":["bzz-raw://d74a03f3a6c1e8f3ad2ac10910d9809cc287e5ae856af01b9e9afa3a8b290786","dweb:/ipfs/QmNeAp9sP6sWQGyhP6itEeQTo8xHtvzEn1Ks7LjnJXAuAJ"],"license":"MIT"}},"version":1},"id":82}